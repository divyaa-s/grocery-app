{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\MERN_STACK_PROJECT\\\\grocery-app\\\\grocery-client\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Login.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // State to display error message\n  const navigate = useNavigate();\n  const loginUser = async (req, res) => {\n    try {\n      const {\n        email,\n        password\n      } = req.body;\n\n      // Check user exists\n      let user = await User.findOne({\n        email\n      });\n      if (!user) return res.status(400).json({\n        msg: \"Invalid credentials\"\n      });\n\n      // Compare password\n      const isMatch = await bcrypt.compare(password, user.password);\n      if (!isMatch) return res.status(400).json({\n        msg: \"Invalid credentials\"\n      });\n\n      // Generate token\n      const token = jwt.sign({\n        id: user._id,\n        role: user.role\n      }, 'your_jwt_secret', {\n        expiresIn: '1h'\n      });\n\n      // Send user details with role\n      res.json({\n        token,\n        user: {\n          id: user._id,\n          name: user.name,\n          email: user.email,\n          role: user.role // ✅ Ensure role is sent!\n        }\n      });\n    } catch (error) {\n      res.status(500).json({\n        msg: \"Server error\",\n        error\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"New user? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"eE05CxDUtBhimkMPPTk2KnyWgL4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","loginUser","req","res","body","user","User","findOne","status","json","msg","isMatch","bcrypt","compare","token","jwt","sign","id","_id","role","expiresIn","name","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleLogin","type","value","onChange","e","target","required","to","_c","$RefreshReg$"],"sources":["D:/Projects/MERN_STACK_PROJECT/grocery-app/grocery-client/src/pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Login.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState(''); // State to display error message\r\n  const navigate = useNavigate();\r\n\r\n  const loginUser = async (req, res) => {\r\n    try {\r\n        const { email, password } = req.body;\r\n\r\n        // Check user exists\r\n        let user = await User.findOne({ email });\r\n        if (!user) return res.status(400).json({ msg: \"Invalid credentials\" });\r\n\r\n        // Compare password\r\n        const isMatch = await bcrypt.compare(password, user.password);\r\n        if (!isMatch) return res.status(400).json({ msg: \"Invalid credentials\" });\r\n\r\n        // Generate token\r\n        const token = jwt.sign({ id: user._id, role: user.role }, 'your_jwt_secret', { expiresIn: '1h' });\r\n\r\n        // Send user details with role\r\n        res.json({ \r\n            token, \r\n            user: { \r\n                id: user._id, \r\n                name: user.name, \r\n                email: user.email, \r\n                role: user.role  // ✅ Ensure role is sent!\r\n            } \r\n        });\r\n\r\n    } catch (error) {\r\n        res.status(500).json({ msg: \"Server error\", error });\r\n    }\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>} {/* Display error message */}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <div className=\"form-group\">\r\n        <h4>\r\n          New user? <Link to=\"/register\">Register</Link>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}